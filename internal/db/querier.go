// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
	"database/sql"
	"time"
)

type Querier interface {
	AdminApproveImagePost(ctx context.Context, idimagepost int32) error
	AdminArchiveBlog(ctx context.Context, arg AdminArchiveBlogParams) error
	AdminArchiveComment(ctx context.Context, arg AdminArchiveCommentParams) error
	AdminArchiveImagepost(ctx context.Context, arg AdminArchiveImagepostParams) error
	AdminArchiveLink(ctx context.Context, arg AdminArchiveLinkParams) error
	// Queries for user deactivation and restoration
	AdminArchiveUser(ctx context.Context, idusers int32) error
	AdminArchiveWriting(ctx context.Context, arg AdminArchiveWritingParams) error
	AdminCancelBannedIp(ctx context.Context, ipNet string) error
	AdminClearExternalLinkCache(ctx context.Context, arg AdminClearExternalLinkCacheParams) error
	// This query selects all words from the "searchwordlist" table and prints them.
	AdminCompleteWordList(ctx context.Context) ([]sql.NullString, error)
	AdminCountForumThreads(ctx context.Context) (int64, error)
	AdminCountForumTopics(ctx context.Context) (int64, error)
	AdminCountThreadsByBoard(ctx context.Context, imageboardIdimageboard int32) (int64, error)
	AdminCountWordList(ctx context.Context) (int64, error)
	AdminCountWordListByPrefix(ctx context.Context, prefix interface{}) (int64, error)
	// AdminCreateLanguage adds a new language.
	// Parameters:
	//   ? - Name of the new language (string)
	AdminCreateLanguage(ctx context.Context, nameof sql.NullString) error
	AdminDeleteExternalLink(ctx context.Context, id int32) error
	AdminDeleteForumThread(ctx context.Context, idforumthread int32) error
	// AdminDeleteLanguage removes a language entry.
	// Parameters:
	//   ? - Language ID to be deleted (int)
	AdminDeleteLanguage(ctx context.Context, idlanguage int32) error
	AdminDeleteNotification(ctx context.Context, id int32) error
	// admin task
	AdminDeletePendingEmail(ctx context.Context, id int32) error
	AdminDeleteTemplateOverride(ctx context.Context, name string) error
	AdminDeleteUserByID(ctx context.Context, idusers int32) error
	// admin task
	AdminDemoteAnnouncement(ctx context.Context, id int32) error
	AdminForumCategoryThreadCounts(ctx context.Context) ([]*AdminForumCategoryThreadCountsRow, error)
	AdminForumTopicThreadCounts(ctx context.Context) ([]*AdminForumTopicThreadCountsRow, error)
	AdminGetAllBlogEntriesByUser(ctx context.Context, arg AdminGetAllBlogEntriesByUserParams) ([]*AdminGetAllBlogEntriesByUserRow, error)
	AdminGetAllCommentsByUser(ctx context.Context, userID int32) ([]*AdminGetAllCommentsByUserRow, error)
	AdminGetAllWritingsByAuthor(ctx context.Context, authorID int32) ([]*AdminGetAllWritingsByAuthorRow, error)
	AdminGetDashboardStats(ctx context.Context) (*AdminGetDashboardStatsRow, error)
	AdminGetForumStats(ctx context.Context) (*AdminGetForumStatsRow, error)
	AdminGetNotification(ctx context.Context, id int32) (*Notification, error)
	// admin task
	AdminGetPendingEmailByID(ctx context.Context, id int32) (*AdminGetPendingEmailByIDRow, error)
	AdminGetRecentAuditLogs(ctx context.Context, limit int32) ([]*AdminGetRecentAuditLogsRow, error)
	AdminGetRequestByID(ctx context.Context, id int32) (*AdminRequestQueue, error)
	// admin task
	AdminGetRoleByID(ctx context.Context, id int32) (*Role, error)
	AdminGetSearchStats(ctx context.Context) (*AdminGetSearchStatsRow, error)
	AdminGetThreadsStartedByUser(ctx context.Context, usersIdusers int32) ([]*Forumthread, error)
	AdminGetThreadsStartedByUserWithTopic(ctx context.Context, usersIdusers int32) ([]*AdminGetThreadsStartedByUserWithTopicRow, error)
	AdminGetWritingsByCategoryId(ctx context.Context, writingCategoryID int32) ([]*AdminGetWritingsByCategoryIdRow, error)
	AdminImageboardPostCounts(ctx context.Context) ([]*AdminImageboardPostCountsRow, error)
	AdminInsertBannedIp(ctx context.Context, arg AdminInsertBannedIpParams) error
	// AdminInsertLanguage adds a new language returning a result.
	AdminInsertLanguage(ctx context.Context, nameof sql.NullString) (sql.Result, error)
	AdminInsertRequestComment(ctx context.Context, arg AdminInsertRequestCommentParams) error
	AdminInsertRequestQueue(ctx context.Context, arg AdminInsertRequestQueueParams) (sql.Result, error)
	AdminInsertWritingCategory(ctx context.Context, arg AdminInsertWritingCategoryParams) error
	AdminListAdministratorEmails(ctx context.Context) ([]string, error)
	AdminListAllCommentsWithThreadInfo(ctx context.Context, arg AdminListAllCommentsWithThreadInfoParams) ([]*AdminListAllCommentsWithThreadInfoRow, error)
	AdminListAllUserIDs(ctx context.Context) ([]int32, error)
	// Result:
	//   idusers (int)
	//   username (string)
	//   email (string)
	AdminListAllUsers(ctx context.Context) ([]*AdminListAllUsersRow, error)
	// admin task
	AdminListAnnouncementsWithNews(ctx context.Context) ([]*AdminListAnnouncementsWithNewsRow, error)
	AdminListArchivedRequests(ctx context.Context) ([]*AdminRequestQueue, error)
	AdminListAuditLogs(ctx context.Context, arg AdminListAuditLogsParams) ([]*AdminListAuditLogsRow, error)
	AdminListBoards(ctx context.Context, arg AdminListBoardsParams) ([]*Imageboard, error)
	AdminListExternalLinks(ctx context.Context, arg AdminListExternalLinksParams) ([]*ExternalLink, error)
	// admin task
	AdminListFailedEmails(ctx context.Context, arg AdminListFailedEmailsParams) ([]*AdminListFailedEmailsRow, error)
	// admin task
	AdminListGrantsByRoleID(ctx context.Context, roleID sql.NullInt32) ([]*Grant, error)
	AdminListLoginAttempts(ctx context.Context) ([]*LoginAttempt, error)
	AdminListPendingDeactivatedBlogs(ctx context.Context, arg AdminListPendingDeactivatedBlogsParams) ([]*AdminListPendingDeactivatedBlogsRow, error)
	AdminListPendingDeactivatedComments(ctx context.Context, arg AdminListPendingDeactivatedCommentsParams) ([]*AdminListPendingDeactivatedCommentsRow, error)
	AdminListPendingDeactivatedImageposts(ctx context.Context, arg AdminListPendingDeactivatedImagepostsParams) ([]*AdminListPendingDeactivatedImagepostsRow, error)
	AdminListPendingDeactivatedLinks(ctx context.Context, arg AdminListPendingDeactivatedLinksParams) ([]*AdminListPendingDeactivatedLinksRow, error)
	AdminListPendingDeactivatedWritings(ctx context.Context, arg AdminListPendingDeactivatedWritingsParams) ([]*AdminListPendingDeactivatedWritingsRow, error)
	AdminListPendingRequests(ctx context.Context) ([]*AdminRequestQueue, error)
	AdminListPendingUsers(ctx context.Context) ([]*AdminListPendingUsersRow, error)
	AdminListRecentNotifications(ctx context.Context, limit int32) ([]*Notification, error)
	AdminListRequestComments(ctx context.Context, requestID int32) ([]*AdminRequestComment, error)
	// admin task
	AdminListRoles(ctx context.Context) ([]*Role, error)
	// admin task
	AdminListRolesWithUsers(ctx context.Context) ([]*AdminListRolesWithUsersRow, error)
	// admin task
	AdminListSentEmails(ctx context.Context, arg AdminListSentEmailsParams) ([]*AdminListSentEmailsRow, error)
	AdminListSessions(ctx context.Context) ([]*AdminListSessionsRow, error)
	// admin task
	AdminListUnsentPendingEmails(ctx context.Context, arg AdminListUnsentPendingEmailsParams) ([]*AdminListUnsentPendingEmailsRow, error)
	// Admin
	AdminListUploadedImages(ctx context.Context, arg AdminListUploadedImagesParams) ([]*UploadedImage, error)
	AdminListUserEmails(ctx context.Context, userID int32) ([]*UserEmail, error)
	AdminListUserIDsByRole(ctx context.Context, name string) ([]int32, error)
	AdminListUsersByID(ctx context.Context, ids []int32) ([]*AdminListUsersByIDRow, error)
	// admin task
	AdminListUsersByRoleID(ctx context.Context, roleID int32) ([]*AdminListUsersByRoleIDRow, error)
	AdminMarkBlogRestored(ctx context.Context, idblogs int32) error
	AdminMarkCommentRestored(ctx context.Context, idcomments int32) error
	AdminMarkImagepostRestored(ctx context.Context, idimagepost int32) error
	AdminMarkLinkRestored(ctx context.Context, idlinker int32) error
	AdminMarkNotificationRead(ctx context.Context, id int32) error
	AdminMarkNotificationUnread(ctx context.Context, id int32) error
	AdminMarkWritingRestored(ctx context.Context, idwriting int32) error
	// admin task
	AdminPromoteAnnouncement(ctx context.Context, siteNewsID int32) error
	AdminPurgeReadNotifications(ctx context.Context) error
	AdminRecalculateAllForumThreadMetaData(ctx context.Context) error
	AdminRecalculateForumThreadByIdMetaData(ctx context.Context, idforumthread int32) error
	// AdminRenameLanguage updates the language name.
	// Parameters:
	//   ? - New name for the language (string)
	//   ? - Language ID to be updated (int)
	AdminRenameLanguage(ctx context.Context, arg AdminRenameLanguageParams) error
	AdminRestoreBlog(ctx context.Context, arg AdminRestoreBlogParams) error
	AdminRestoreComment(ctx context.Context, arg AdminRestoreCommentParams) error
	AdminRestoreImagepost(ctx context.Context, arg AdminRestoreImagepostParams) error
	AdminRestoreLink(ctx context.Context, arg AdminRestoreLinkParams) error
	AdminRestoreUser(ctx context.Context, idusers int32) error
	AdminRestoreWriting(ctx context.Context, arg AdminRestoreWritingParams) error
	AdminScrubBlog(ctx context.Context, arg AdminScrubBlogParams) error
	AdminScrubComment(ctx context.Context, arg AdminScrubCommentParams) error
	AdminScrubImagepost(ctx context.Context, idimagepost int32) error
	AdminScrubLink(ctx context.Context, arg AdminScrubLinkParams) error
	AdminScrubUser(ctx context.Context, arg AdminScrubUserParams) error
	AdminScrubWriting(ctx context.Context, arg AdminScrubWritingParams) error
	AdminSetTemplateOverride(ctx context.Context, arg AdminSetTemplateOverrideParams) error
	AdminUpdateBannedIp(ctx context.Context, arg AdminUpdateBannedIpParams) error
	AdminUpdateRequestStatus(ctx context.Context, arg AdminUpdateRequestStatusParams) error
	// admin task
	AdminUpdateRole(ctx context.Context, arg AdminUpdateRoleParams) error
	// admin task
	AdminUpdateRolePublicProfileAllowed(ctx context.Context, arg AdminUpdateRolePublicProfileAllowedParams) error
	AdminUpdateUsernameByID(ctx context.Context, arg AdminUpdateUsernameByIDParams) error
	AdminUpdateWritingCategory(ctx context.Context, arg AdminUpdateWritingCategoryParams) error
	AdminUserPostCounts(ctx context.Context) ([]*AdminUserPostCountsRow, error)
	AdminUserPostCountsByID(ctx context.Context, idusers int32) (*AdminUserPostCountsByIDRow, error)
	// Show each search word with total usage counts across all search tables.
	AdminWordListWithCounts(ctx context.Context, arg AdminWordListWithCountsParams) ([]*AdminWordListWithCountsRow, error)
	AdminWordListWithCountsByPrefix(ctx context.Context, arg AdminWordListWithCountsByPrefixParams) ([]*AdminWordListWithCountsByPrefixRow, error)
	AdminWritingCategoryCounts(ctx context.Context) ([]*AdminWritingCategoryCountsRow, error)
	BlogsSearchFirst(ctx context.Context, arg BlogsSearchFirstParams) ([]int32, error)
	BlogsSearchNext(ctx context.Context, arg BlogsSearchNextParams) ([]int32, error)
	CheckGrant(ctx context.Context, arg CheckGrantParams) (int32, error)
	CheckRoleGrant(ctx context.Context, arg CheckRoleGrantParams) (int32, error)
	CommentsSearchFirstInRestrictedTopic(ctx context.Context, arg CommentsSearchFirstInRestrictedTopicParams) ([]int32, error)
	CommentsSearchFirstNotInRestrictedTopic(ctx context.Context, arg CommentsSearchFirstNotInRestrictedTopicParams) ([]int32, error)
	CommentsSearchNextInRestrictedTopic(ctx context.Context, arg CommentsSearchNextInRestrictedTopicParams) ([]int32, error)
	CommentsSearchNextNotInRestrictedTopic(ctx context.Context, arg CommentsSearchNextNotInRestrictedTopicParams) ([]int32, error)
	CountLinksByCategory(ctx context.Context, linkerCategoryID int32) (int64, error)
	CountUnreadNotificationsForLister(ctx context.Context, listerID int32) (int64, error)
	CreateBlogEntry(ctx context.Context, arg CreateBlogEntryParams) (int64, error)
	// This query adds a new entry to the "bookmarks" table for a user.
	CreateBookmarks(ctx context.Context, arg CreateBookmarksParams) error
	CreateComment(ctx context.Context, arg CreateCommentParams) (int64, error)
	CreateFAQCategory(ctx context.Context, arg CreateFAQCategoryParams) error
	CreateFAQQuestion(ctx context.Context, arg CreateFAQQuestionParams) error
	CreateForumCategory(ctx context.Context, arg CreateForumCategoryParams) error
	CreateForumTopic(ctx context.Context, arg CreateForumTopicParams) (int64, error)
	CreateGrant(ctx context.Context, arg CreateGrantParams) (int64, error)
	CreateImageBoard(ctx context.Context, arg CreateImageBoardParams) error
	CreateImagePost(ctx context.Context, arg CreateImagePostParams) (int64, error)
	CreateLinkerCategory(ctx context.Context, arg CreateLinkerCategoryParams) error
	CreateLinkerItem(ctx context.Context, arg CreateLinkerItemParams) error
	CreateLinkerQueuedItem(ctx context.Context, arg CreateLinkerQueuedItemParams) error
	CreateNewsPost(ctx context.Context, arg CreateNewsPostParams) (int64, error)
	CreatePasswordReset(ctx context.Context, arg CreatePasswordResetParams) error
	CreateUploadedImage(ctx context.Context, arg CreateUploadedImageParams) (int64, error)
	// This query inserts a new permission into the "permissions" table.
	// Parameters:
	//   ? - User ID to be associated with the permission (int)
	//   ? - Role of the permission (string)
	CreateUserRole(ctx context.Context, arg CreateUserRoleParams) error
	DeactivateNewsPost(ctx context.Context, idsitenews int32) error
	DeleteFAQ(ctx context.Context, arg DeleteFAQParams) error
	DeleteFAQCategory(ctx context.Context, arg DeleteFAQCategoryParams) error
	DeleteForumCategory(ctx context.Context, idforumcategory int32) error
	// Removes a forum topic by ID.
	DeleteForumTopic(ctx context.Context, idforumtopic int32) error
	DeleteGrant(ctx context.Context, id int32) error
	DeleteImageBoard(ctx context.Context, idimageboard int32) error
	DeleteLinkerCategory(ctx context.Context, arg DeleteLinkerCategoryParams) error
	DeleteLinkerQueuedItem(ctx context.Context, arg DeleteLinkerQueuedItemParams) error
	DeletePasswordReset(ctx context.Context, id int32) error
	// Delete all password reset entries for the given user and return the result
	DeletePasswordResetsByUser(ctx context.Context, userID int32) (sql.Result, error)
	DeleteSubscription(ctx context.Context, arg DeleteSubscriptionParams) error
	DeleteSubscriptionByID(ctx context.Context, arg DeleteSubscriptionByIDParams) error
	DeleteUserEmail(ctx context.Context, id int32) error
	DeleteUserEmailsByEmailExceptID(ctx context.Context, arg DeleteUserEmailsByEmailExceptIDParams) error
	DeleteUserLanguagesByUser(ctx context.Context, usersIdusers int32) error
	// This query deletes a permission from the "permissions" table based on the provided "permid".
	// Parameters:
	//   ? - Permission ID to be deleted (int)
	DeleteUserRole(ctx context.Context, iduserRoles int32) error
	FindForumTopicByTitle(ctx context.Context, title sql.NullString) (*Forumtopic, error)
	GetActiveAnnouncementWithNewsForLister(ctx context.Context, arg GetActiveAnnouncementWithNewsForListerParams) (*GetActiveAnnouncementWithNewsForListerRow, error)
	GetAdministratorUserRole(ctx context.Context, usersIdusers int32) (*UserRole, error)
	GetAllAnsweredFAQWithFAQCategoriesForUser(ctx context.Context, arg GetAllAnsweredFAQWithFAQCategoriesForUserParams) ([]*GetAllAnsweredFAQWithFAQCategoriesForUserRow, error)
	GetAllCommentsForIndex(ctx context.Context) ([]*GetAllCommentsForIndexRow, error)
	GetAllFAQCategories(ctx context.Context) ([]*FaqCategory, error)
	GetAllFAQQuestions(ctx context.Context) ([]*Faq, error)
	GetAllForumCategories(ctx context.Context) ([]*Forumcategory, error)
	GetAllForumCategoriesWithSubcategoryCount(ctx context.Context) ([]*GetAllForumCategoriesWithSubcategoryCountRow, error)
	GetAllForumThreadsWithTopic(ctx context.Context) ([]*GetAllForumThreadsWithTopicRow, error)
	GetAllForumTopics(ctx context.Context) ([]*Forumtopic, error)
	GetAllForumTopicsByCategoryIdForUserWithLastPosterName(ctx context.Context, arg GetAllForumTopicsByCategoryIdForUserWithLastPosterNameParams) ([]*GetAllForumTopicsByCategoryIdForUserWithLastPosterNameRow, error)
	GetAllForumTopicsForUser(ctx context.Context, arg GetAllForumTopicsForUserParams) ([]*GetAllForumTopicsForUserRow, error)
	GetAllImagePostsForIndex(ctx context.Context) ([]*GetAllImagePostsForIndexRow, error)
	GetAllLinkerCategories(ctx context.Context) ([]*LinkerCategory, error)
	GetAllLinkerCategoriesForUser(ctx context.Context, arg GetAllLinkerCategoriesForUserParams) ([]*LinkerCategory, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescending(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginated(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRow(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRowParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRowRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginated(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginatedParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginatedRow, error)
	GetAllLinkerQueuedItemsWithUserAndLinkerCategoryDetails(ctx context.Context) ([]*GetAllLinkerQueuedItemsWithUserAndLinkerCategoryDetailsRow, error)
	GetAllLinkersForIndex(ctx context.Context) ([]*GetAllLinkersForIndexRow, error)
	GetAllSiteNewsForIndex(ctx context.Context) ([]*GetAllSiteNewsForIndexRow, error)
	GetAllWritingsByAuthorForLister(ctx context.Context, arg GetAllWritingsByAuthorForListerParams) ([]*GetAllWritingsByAuthorForListerRow, error)
	GetAllWritingsForIndex(ctx context.Context) ([]*GetAllWritingsForIndexRow, error)
	GetBlogEntryForListerByID(ctx context.Context, arg GetBlogEntryForListerByIDParams) (*GetBlogEntryForListerByIDRow, error)
	// This query retrieves the "list" from the "bookmarks" table for a specific user based on their "users_idusers".
	GetBookmarksForUser(ctx context.Context, usersIdusers int32) (*GetBookmarksForUserRow, error)
	GetCommentById(ctx context.Context, idcomments int32) (*Comment, error)
	GetCommentByIdForUser(ctx context.Context, arg GetCommentByIdForUserParams) (*GetCommentByIdForUserRow, error)
	GetCommentsByIdsForUserWithThreadInfo(ctx context.Context, arg GetCommentsByIdsForUserWithThreadInfoParams) ([]*GetCommentsByIdsForUserWithThreadInfoRow, error)
	GetCommentsByThreadIdForUser(ctx context.Context, arg GetCommentsByThreadIdForUserParams) ([]*GetCommentsByThreadIdForUserRow, error)
	GetExternalLink(ctx context.Context, url string) (*ExternalLink, error)
	GetFAQAnsweredQuestions(ctx context.Context, arg GetFAQAnsweredQuestionsParams) ([]*Faq, error)
	GetFAQByID(ctx context.Context, idfaq int32) (*Faq, error)
	GetFAQCategoriesWithQuestionCount(ctx context.Context) ([]*GetFAQCategoriesWithQuestionCountRow, error)
	GetFAQDismissedQuestions(ctx context.Context) ([]*Faq, error)
	GetFAQRevisionsForAdmin(ctx context.Context, faqID int32) ([]*FaqRevision, error)
	GetFAQUnansweredQuestions(ctx context.Context) ([]*Faq, error)
	GetForumCategoryById(ctx context.Context, idforumcategory int32) (*Forumcategory, error)
	GetForumThreadIdByNewsPostId(ctx context.Context, idsitenews int32) (*GetForumThreadIdByNewsPostIdRow, error)
	GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostText(ctx context.Context, arg GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostTextParams) ([]*GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostTextRow, error)
	GetForumTopicById(ctx context.Context, idforumtopic int32) (*Forumtopic, error)
	GetForumTopicByIdForUser(ctx context.Context, arg GetForumTopicByIdForUserParams) (*GetForumTopicByIdForUserRow, error)
	GetForumTopicIdByThreadId(ctx context.Context, idforumthread int32) (int32, error)
	GetForumTopicsByCategoryId(ctx context.Context, forumcategoryIdforumcategory int32) ([]*Forumtopic, error)
	GetImageBoardById(ctx context.Context, idimageboard int32) (*Imageboard, error)
	GetImagePostByIDForLister(ctx context.Context, arg GetImagePostByIDForListerParams) (*GetImagePostByIDForListerRow, error)
	GetImagePostInfoByPath(ctx context.Context, arg GetImagePostInfoByPathParams) (*GetImagePostInfoByPathRow, error)
	GetImagePostsByUserDescending(ctx context.Context, arg GetImagePostsByUserDescendingParams) ([]*GetImagePostsByUserDescendingRow, error)
	GetImagePostsByUserDescendingAll(ctx context.Context, arg GetImagePostsByUserDescendingAllParams) ([]*GetImagePostsByUserDescendingAllRow, error)
	GetLatestAnnouncementByNewsID(ctx context.Context, siteNewsID int32) (*SiteAnnouncement, error)
	GetLinkerCategoriesWithCount(ctx context.Context) ([]*GetLinkerCategoriesWithCountRow, error)
	GetLinkerCategoryById(ctx context.Context, idlinkercategory int32) (*LinkerCategory, error)
	GetLinkerCategoryLinkCounts(ctx context.Context) ([]*GetLinkerCategoryLinkCountsRow, error)
	GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescending(ctx context.Context, idlinker int32) (*GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingRow, error)
	GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUserParams) (*GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescending(ctx context.Context, linkerids []int32) ([]*GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingRow, error)
	GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUserParams) ([]*GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetLinkerItemsByUserDescending(ctx context.Context, arg GetLinkerItemsByUserDescendingParams) ([]*GetLinkerItemsByUserDescendingRow, error)
	GetLinkerItemsByUserDescendingForUser(ctx context.Context, arg GetLinkerItemsByUserDescendingForUserParams) ([]*GetLinkerItemsByUserDescendingForUserRow, error)
	GetMaxNotificationPriority(ctx context.Context, userID int32) (interface{}, error)
	GetNewsPostByIdWithWriterIdAndThreadCommentCount(ctx context.Context, arg GetNewsPostByIdWithWriterIdAndThreadCommentCountParams) (*GetNewsPostByIdWithWriterIdAndThreadCommentCountRow, error)
	GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCount(ctx context.Context, arg GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCountParams) ([]*GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCountRow, error)
	GetNewsPostsWithWriterUsernameAndThreadCommentCountDescending(ctx context.Context, arg GetNewsPostsWithWriterUsernameAndThreadCommentCountDescendingParams) ([]*GetNewsPostsWithWriterUsernameAndThreadCommentCountDescendingRow, error)
	GetNotificationEmailByUserID(ctx context.Context, userID int32) (*UserEmail, error)
	GetPasswordResetByCode(ctx context.Context, arg GetPasswordResetByCodeParams) (*PendingPassword, error)
	GetPasswordResetByUser(ctx context.Context, arg GetPasswordResetByUserParams) (*PendingPassword, error)
	GetPendingEmailErrorCount(ctx context.Context, id int32) (int32, error)
	// Lists the role names granted to a user.
	GetPermissionsByUserID(ctx context.Context, usersIdusers int32) ([]*GetPermissionsByUserIDRow, error)
	GetPermissionsWithUsers(ctx context.Context, arg GetPermissionsWithUsersParams) ([]*GetPermissionsWithUsersRow, error)
	GetPreferenceForLister(ctx context.Context, listerID int32) (*Preference, error)
	GetPublicWritings(ctx context.Context, arg GetPublicWritingsParams) ([]*Writing, error)
	GetThreadLastPosterAndPerms(ctx context.Context, arg GetThreadLastPosterAndPermsParams) (*GetThreadLastPosterAndPermsRow, error)
	GetUserById(ctx context.Context, idusers int32) (*GetUserByIdRow, error)
	GetUserByUsername(ctx context.Context, username sql.NullString) (*GetUserByUsernameRow, error)
	GetUserEmailByCode(ctx context.Context, lastVerificationCode sql.NullString) (*UserEmail, error)
	GetUserEmailByEmail(ctx context.Context, email string) (*UserEmail, error)
	GetUserEmailByID(ctx context.Context, id int32) (*UserEmail, error)
	GetUserLanguages(ctx context.Context, usersIdusers int32) ([]*UserLanguage, error)
	// This query returns the role for a user.
	// Result:
	//   role (string)
	GetUserRole(ctx context.Context, usersIdusers int32) (string, error)
	// This query selects permissions information for admin users.
	//   iduser_roles (int)
	//   role (string)
	//   username (string)
	//   email (string)
	GetUserRoles(ctx context.Context) ([]*GetUserRolesRow, error)
	GetWritingCategoryById(ctx context.Context, idwritingcategory int32) (*WritingCategory, error)
	GetWritingForListerByID(ctx context.Context, arg GetWritingForListerByIDParams) (*GetWritingForListerByIDRow, error)
	IncrementEmailError(ctx context.Context, id int32) error
	InsertAdminUserComment(ctx context.Context, arg InsertAdminUserCommentParams) error
	InsertAuditLog(ctx context.Context, arg InsertAuditLogParams) error
	InsertEmailPreferenceForLister(ctx context.Context, arg InsertEmailPreferenceForListerParams) error
	InsertFAQQuestionForWriter(ctx context.Context, arg InsertFAQQuestionForWriterParams) (sql.Result, error)
	InsertFAQRevisionForUser(ctx context.Context, arg InsertFAQRevisionForUserParams) error
	InsertPassword(ctx context.Context, arg InsertPasswordParams) error
	InsertPendingEmail(ctx context.Context, arg InsertPendingEmailParams) error
	InsertPreferenceForLister(ctx context.Context, arg InsertPreferenceForListerParams) error
	InsertSubscription(ctx context.Context, arg InsertSubscriptionParams) error
	InsertUserEmail(ctx context.Context, arg InsertUserEmailParams) error
	InsertUserLang(ctx context.Context, arg InsertUserLangParams) error
	InsertWriting(ctx context.Context, arg InsertWritingParams) (int64, error)
	LatestAdminUserComment(ctx context.Context, usersIdusers int32) (*AdminUserComment, error)
	LinkerSearchFirst(ctx context.Context, arg LinkerSearchFirstParams) ([]int32, error)
	LinkerSearchNext(ctx context.Context, arg LinkerSearchNextParams) ([]int32, error)
	ListActiveBans(ctx context.Context) ([]*BannedIp, error)
	ListAdminUserComments(ctx context.Context, usersIdusers int32) ([]*AdminUserComment, error)
	ListBannedIps(ctx context.Context) ([]*BannedIp, error)
	ListBlogEntriesByAuthorForLister(ctx context.Context, arg ListBlogEntriesByAuthorForListerParams) ([]*ListBlogEntriesByAuthorForListerRow, error)
	ListBlogEntriesByIDsForLister(ctx context.Context, arg ListBlogEntriesByIDsForListerParams) ([]*ListBlogEntriesByIDsForListerRow, error)
	ListBlogEntriesForLister(ctx context.Context, arg ListBlogEntriesForListerParams) ([]*ListBlogEntriesForListerRow, error)
	ListBloggersForLister(ctx context.Context, arg ListBloggersForListerParams) ([]*ListBloggersForListerRow, error)
	ListBloggersSearchForLister(ctx context.Context, arg ListBloggersSearchForListerParams) ([]*ListBloggersSearchForListerRow, error)
	ListBoardsByParentIDForLister(ctx context.Context, arg ListBoardsByParentIDForListerParams) ([]*Imageboard, error)
	ListBoardsForLister(ctx context.Context, arg ListBoardsForListerParams) ([]*Imageboard, error)
	ListEffectiveRoleIDsByUserID(ctx context.Context, usersIdusers int32) ([]int32, error)
	ListGrants(ctx context.Context) ([]*Grant, error)
	ListGrantsByUserID(ctx context.Context, userID sql.NullInt32) ([]*Grant, error)
	ListImagePostsByBoardForLister(ctx context.Context, arg ListImagePostsByBoardForListerParams) ([]*ListImagePostsByBoardForListerRow, error)
	ListImagePostsByPosterForLister(ctx context.Context, arg ListImagePostsByPosterForListerParams) ([]*ListImagePostsByPosterForListerRow, error)
	ListNotificationsForLister(ctx context.Context, arg ListNotificationsForListerParams) ([]*Notification, error)
	ListPublicWritingsByUserForLister(ctx context.Context, arg ListPublicWritingsByUserForListerParams) ([]*ListPublicWritingsByUserForListerRow, error)
	ListPublicWritingsInCategoryForLister(ctx context.Context, arg ListPublicWritingsInCategoryForListerParams) ([]*ListPublicWritingsInCategoryForListerRow, error)
	ListSubscribersForPattern(ctx context.Context, arg ListSubscribersForPatternParams) ([]int32, error)
	ListSubscribersForPatterns(ctx context.Context, arg ListSubscribersForPatternsParams) ([]int32, error)
	ListSubscriptionsByUser(ctx context.Context, usersIdusers int32) ([]*ListSubscriptionsByUserRow, error)
	ListUnreadNotificationsForLister(ctx context.Context, arg ListUnreadNotificationsForListerParams) ([]*Notification, error)
	ListUploadedImagesByUserForLister(ctx context.Context, arg ListUploadedImagesByUserForListerParams) ([]*UploadedImage, error)
	ListUserEmailsForLister(ctx context.Context, arg ListUserEmailsForListerParams) ([]*UserEmail, error)
	ListUsersWithRoles(ctx context.Context) ([]*ListUsersWithRolesRow, error)
	ListWritersForLister(ctx context.Context, arg ListWritersForListerParams) ([]*ListWritersForListerRow, error)
	ListWritersSearchForLister(ctx context.Context, arg ListWritersSearchForListerParams) ([]*ListWritersSearchForListerRow, error)
	ListWritingCategoriesForLister(ctx context.Context, arg ListWritingCategoriesForListerParams) ([]*WritingCategory, error)
	ListWritingsByIDsForLister(ctx context.Context, arg ListWritingsByIDsForListerParams) ([]*ListWritingsByIDsForListerRow, error)
	Login(ctx context.Context, username sql.NullString) (*LoginRow, error)
	MakeThread(ctx context.Context, forumtopicIdforumtopic int32) (int64, error)
	MarkEmailSent(ctx context.Context, id int32) error
	MarkNotificationReadForReader(ctx context.Context, arg MarkNotificationReadForReaderParams) error
	MarkNotificationUnreadForReader(ctx context.Context, arg MarkNotificationUnreadForReaderParams) error
	MarkPasswordResetVerified(ctx context.Context, id int32) error
	// Remove password reset entries that have expired or were already verified
	PurgePasswordResetsBefore(ctx context.Context, createdAt time.Time) (sql.Result, error)
	RebuildAllForumTopicMetaColumns(ctx context.Context) error
	RebuildForumTopicByIdMetaColumns(ctx context.Context, idforumtopic int32) error
	RegisterExternalLinkClick(ctx context.Context, url string) error
	RenameFAQCategory(ctx context.Context, arg RenameFAQCategoryParams) error
	RenameLinkerCategory(ctx context.Context, arg RenameLinkerCategoryParams) error
	SelectInsertLInkerQueuedItemIntoLinkerByLinkerQueueId(ctx context.Context, arg SelectInsertLInkerQueuedItemIntoLinkerByLinkerQueueIdParams) (int64, error)
	SetAnnouncementActive(ctx context.Context, arg SetAnnouncementActiveParams) error
	SetCommentLastIndex(ctx context.Context, idcomments int32) error
	SetImagePostLastIndex(ctx context.Context, idimagepost int32) error
	SetLinkerLastIndex(ctx context.Context, idlinker int32) error
	SetNotificationPriority(ctx context.Context, arg SetNotificationPriorityParams) error
	SetSiteNewsLastIndex(ctx context.Context, idsitenews int32) error
	SetVerificationCode(ctx context.Context, arg SetVerificationCodeParams) error
	SetWritingLastIndex(ctx context.Context, idwriting int32) error
	SiteNewsSearchFirst(ctx context.Context, arg SiteNewsSearchFirstParams) ([]int32, error)
	SiteNewsSearchNext(ctx context.Context, arg SiteNewsSearchNextParams) ([]int32, error)
	SystemAddToBlogsSearch(ctx context.Context, arg SystemAddToBlogsSearchParams) error
	SystemAddToForumCommentSearch(ctx context.Context, arg SystemAddToForumCommentSearchParams) error
	SystemAddToForumWritingSearch(ctx context.Context, arg SystemAddToForumWritingSearchParams) error
	SystemAddToImagePostSearch(ctx context.Context, arg SystemAddToImagePostSearchParams) error
	SystemAddToLinkerSearch(ctx context.Context, arg SystemAddToLinkerSearchParams) error
	SystemAddToSiteNewsSearch(ctx context.Context, arg SystemAddToSiteNewsSearchParams) error
	SystemAssignBlogEntryThreadID(ctx context.Context, arg SystemAssignBlogEntryThreadIDParams) error
	SystemAssignLinkerThreadID(ctx context.Context, arg SystemAssignLinkerThreadIDParams) error
	SystemAssignNewsThreadID(ctx context.Context, arg SystemAssignNewsThreadIDParams) error
	SystemAssignWritingThreadID(ctx context.Context, arg SystemAssignWritingThreadIDParams) error
	SystemCountDeadLetters(ctx context.Context) (int64, error)
	// SystemCountLanguages counts all languages.
	SystemCountLanguages(ctx context.Context) (int64, error)
	SystemCountRecentLoginAttempts(ctx context.Context, arg SystemCountRecentLoginAttemptsParams) (int64, error)
	SystemCreateSearchWord(ctx context.Context, word string) (int64, error)
	// This query deletes all data from the "blogs_search" table.
	SystemDeleteBlogsSearch(ctx context.Context) error
	// This query deletes all data from the "comments_search" table.
	SystemDeleteCommentsSearch(ctx context.Context) error
	SystemDeleteDeadLetter(ctx context.Context, id int32) error
	SystemDeleteImagePostSearch(ctx context.Context) error
	// This query deletes all data from the "linker_search" table.
	SystemDeleteLinkerSearch(ctx context.Context) error
	SystemDeleteSessionByID(ctx context.Context, sessionID string) error
	// This query deletes all data from the "site_news_search" table.
	SystemDeleteSiteNewsSearch(ctx context.Context) error
	// This query deletes all data from the "writing_search" table.
	SystemDeleteWritingSearch(ctx context.Context) error
	SystemGetAllBlogsForIndex(ctx context.Context) ([]*SystemGetAllBlogsForIndexRow, error)
	// SystemGetLanguageIDByName resolves a language ID by name.
	SystemGetLanguageIDByName(ctx context.Context, nameof sql.NullString) (int32, error)
	SystemGetLastNotificationByMessage(ctx context.Context, arg SystemGetLastNotificationByMessageParams) (*Notification, error)
	SystemGetSearchWordByWordLowercased(ctx context.Context, lcase string) (*Searchwordlist, error)
	SystemGetTemplateOverride(ctx context.Context, name string) (string, error)
	// System query only used internally
	SystemInsertDeadLetter(ctx context.Context, message string) error
	SystemInsertLoginAttempt(ctx context.Context, arg SystemInsertLoginAttemptParams) error
	// SystemInsertNotification stores an internal notification for a user.
	// Parameters:
	//   UserID
	//   Link
	//   Message
	SystemInsertNotification(ctx context.Context, arg SystemInsertNotificationParams) error
	SystemInsertSession(ctx context.Context, arg SystemInsertSessionParams) error
	SystemInsertUser(ctx context.Context, username sql.NullString) (sql.Result, error)
	SystemLatestDeadLetter(ctx context.Context) (interface{}, error)
	SystemListBoardsByParentID(ctx context.Context, arg SystemListBoardsByParentIDParams) ([]*Imageboard, error)
	SystemListDeadLetters(ctx context.Context, limit int32) ([]*DeadLetter, error)
	// SystemListLanguages lists all languages.
	SystemListLanguages(ctx context.Context) ([]*Language, error)
	SystemListPendingEmails(ctx context.Context, arg SystemListPendingEmailsParams) ([]*SystemListPendingEmailsRow, error)
	SystemListPublicWritingsByAuthor(ctx context.Context, arg SystemListPublicWritingsByAuthorParams) ([]*SystemListPublicWritingsByAuthorRow, error)
	SystemListPublicWritingsInCategory(ctx context.Context, arg SystemListPublicWritingsInCategoryParams) ([]*SystemListPublicWritingsInCategoryRow, error)
	SystemListUserInfo(ctx context.Context) ([]*SystemListUserInfoRow, error)
	SystemListVerifiedEmailsByUserID(ctx context.Context, userID int32) ([]*UserEmail, error)
	SystemListWritingCategories(ctx context.Context, arg SystemListWritingCategoriesParams) ([]*WritingCategory, error)
	SystemPurgeDeadLettersBefore(ctx context.Context, createdAt time.Time) error
	SystemSetBlogLastIndex(ctx context.Context, id int32) error
	UpdateAutoSubscribeRepliesForLister(ctx context.Context, arg UpdateAutoSubscribeRepliesForListerParams) error
	UpdateBlogEntry(ctx context.Context, arg UpdateBlogEntryParams) error
	// This query updates the "list" column in the "bookmarks" table for a specific user based on their "users_idusers".
	UpdateBookmarks(ctx context.Context, arg UpdateBookmarksParams) error
	UpdateComment(ctx context.Context, arg UpdateCommentParams) error
	UpdateEmailForumUpdatesForLister(ctx context.Context, arg UpdateEmailForumUpdatesForListerParams) error
	UpdateFAQQuestionAnswer(ctx context.Context, arg UpdateFAQQuestionAnswerParams) error
	UpdateForumCategory(ctx context.Context, arg UpdateForumCategoryParams) error
	UpdateForumTopic(ctx context.Context, arg UpdateForumTopicParams) error
	UpdateImageBoard(ctx context.Context, arg UpdateImageBoardParams) error
	UpdateImagePostByIdForumThreadId(ctx context.Context, arg UpdateImagePostByIdForumThreadIdParams) error
	UpdateLinkerCategorySortOrder(ctx context.Context, arg UpdateLinkerCategorySortOrderParams) error
	UpdateLinkerItem(ctx context.Context, arg UpdateLinkerItemParams) error
	UpdateLinkerQueuedItem(ctx context.Context, arg UpdateLinkerQueuedItemParams) error
	UpdateNewsPost(ctx context.Context, arg UpdateNewsPostParams) error
	UpdatePermission(ctx context.Context, arg UpdatePermissionParams) error
	UpdatePreferenceForLister(ctx context.Context, arg UpdatePreferenceForListerParams) error
	UpdatePublicProfileEnabledAtByUserID(ctx context.Context, arg UpdatePublicProfileEnabledAtByUserIDParams) error
	UpdateUserEmail(ctx context.Context, arg UpdateUserEmailParams) error
	UpdateUserEmailVerification(ctx context.Context, arg UpdateUserEmailVerificationParams) error
	UpdateWriting(ctx context.Context, arg UpdateWritingParams) error
	UserByEmail(ctx context.Context, email string) (*UserByEmailRow, error)
	UserHasLoginRole(ctx context.Context, usersIdusers int32) (int32, error)
	UserHasPublicProfileRole(ctx context.Context, usersIdusers int32) (int32, error)
	UserHasRole(ctx context.Context, arg UserHasRoleParams) (int32, error)
	WritingSearchDelete(ctx context.Context, writingID int32) error
	WritingSearchFirst(ctx context.Context, arg WritingSearchFirstParams) ([]int32, error)
	WritingSearchNext(ctx context.Context, arg WritingSearchNextParams) ([]int32, error)
}

var _ Querier = (*Queries)(nil)
