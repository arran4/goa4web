// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"
	"database/sql"
	"time"
)

type Querier interface {
	AddToBlogsSearch(ctx context.Context, arg AddToBlogsSearchParams) error
	AddToForumCommentSearch(ctx context.Context, arg AddToForumCommentSearchParams) error
	AddToForumWritingSearch(ctx context.Context, arg AddToForumWritingSearchParams) error
	AddToImagePostSearch(ctx context.Context, arg AddToImagePostSearchParams) error
	AddToLinkerSearch(ctx context.Context, arg AddToLinkerSearchParams) error
	AddToSiteNewsSearch(ctx context.Context, arg AddToSiteNewsSearchParams) error
	AdminAllUserIDs(ctx context.Context) ([]int32, error)
	// Result:
	//   idusers (int)
	//   username (string)
	//   email (string)
	AdminAllUsers(ctx context.Context) ([]*AdminAllUsersRow, error)
	AdminCancelBannedIp(ctx context.Context, ipNet string) error
	AdminClearExternalLinkCache(ctx context.Context, arg AdminClearExternalLinkCacheParams) error
	AdminCountThreadsByBoard(ctx context.Context, imageboardIdimageboard int32) (int64, error)
	AdminDeleteExternalLink(ctx context.Context, id int32) error
	AdminDeleteForumThread(ctx context.Context, idforumthread int32) error
	// admin task
	AdminDeletePendingEmail(ctx context.Context, id int32) error
	AdminDeleteTemplateOverride(ctx context.Context, name string) error
	// admin task
	AdminDemoteAnnouncement(ctx context.Context, id int32) error
	AdminForumCategoryThreadCounts(ctx context.Context) ([]*AdminForumCategoryThreadCountsRow, error)
	AdminForumTopicThreadCounts(ctx context.Context) ([]*AdminForumTopicThreadCountsRow, error)
	AdminGetAllCommentsByUser(ctx context.Context, userID int32) ([]*AdminGetAllCommentsByUserRow, error)
	// admin task
	AdminGetPendingEmailByID(ctx context.Context, id int32) (*AdminGetPendingEmailByIDRow, error)
	AdminGetRecentAuditLogs(ctx context.Context, limit int32) ([]*AdminGetRecentAuditLogsRow, error)
	// admin task
	AdminGetRoleByID(ctx context.Context, id int32) (*Role, error)
	AdminGetThreadsStartedByUser(ctx context.Context, usersIdusers int32) ([]*Forumthread, error)
	AdminGetThreadsStartedByUserWithTopic(ctx context.Context, usersIdusers int32) ([]*AdminGetThreadsStartedByUserWithTopicRow, error)
	AdminImageboardPostCounts(ctx context.Context) ([]*AdminImageboardPostCountsRow, error)
	AdminInsertBannedIp(ctx context.Context, arg AdminInsertBannedIpParams) error
	AdminListAdministratorEmails(ctx context.Context) ([]string, error)
	AdminListAllCommentsWithThreadInfo(ctx context.Context, arg AdminListAllCommentsWithThreadInfoParams) ([]*AdminListAllCommentsWithThreadInfoRow, error)
	// admin task
	AdminListAnnouncementsWithNews(ctx context.Context) ([]*AdminListAnnouncementsWithNewsRow, error)
	AdminListAuditLogs(ctx context.Context, arg AdminListAuditLogsParams) ([]*AdminListAuditLogsRow, error)
	AdminListExternalLinks(ctx context.Context, arg AdminListExternalLinksParams) ([]*ExternalLink, error)
	// admin task
	AdminListFailedEmails(ctx context.Context, arg AdminListFailedEmailsParams) ([]*AdminListFailedEmailsRow, error)
	// admin task
	AdminListGrantsByRoleID(ctx context.Context, roleID sql.NullInt32) ([]*Grant, error)
	AdminListLoginAttempts(ctx context.Context) ([]*LoginAttempt, error)
	AdminListPendingUsers(ctx context.Context) ([]*AdminListPendingUsersRow, error)
	// admin task
	AdminListRoles(ctx context.Context) ([]*Role, error)
	// admin task
	AdminListRolesWithUsers(ctx context.Context) ([]*AdminListRolesWithUsersRow, error)
	// admin task
	AdminListSentEmails(ctx context.Context, arg AdminListSentEmailsParams) ([]*AdminListSentEmailsRow, error)
	// admin task
	AdminListUnsentPendingEmails(ctx context.Context, arg AdminListUnsentPendingEmailsParams) ([]*AdminListUnsentPendingEmailsRow, error)
	// Admin
	AdminListUploadedImages(ctx context.Context, arg AdminListUploadedImagesParams) ([]*UploadedImage, error)
	AdminListUserIDsByRole(ctx context.Context, name string) ([]int32, error)
	// admin task
	AdminListUsersByRoleID(ctx context.Context, roleID int32) ([]*AdminListUsersByRoleIDRow, error)
	// admin task
	AdminPromoteAnnouncement(ctx context.Context, siteNewsID int32) error
	AdminPurgeReadNotifications(ctx context.Context) error
	AdminRecalculateAllForumThreadMetaData(ctx context.Context) error
	AdminRecalculateForumThreadByIdMetaData(ctx context.Context, idforumthread int32) error
	AdminSetTemplateOverride(ctx context.Context, arg AdminSetTemplateOverrideParams) error
	AdminUpdateBannedIp(ctx context.Context, arg AdminUpdateBannedIpParams) error
	// admin task
	AdminUpdateRolePublicProfileAllowed(ctx context.Context, arg AdminUpdateRolePublicProfileAllowedParams) error
	AdminUserPostCounts(ctx context.Context) ([]*AdminUserPostCountsRow, error)
	AdminUserPostCountsByID(ctx context.Context, idusers int32) (*AdminUserPostCountsByIDRow, error)
	AdminUsersByID(ctx context.Context, ids []int32) ([]*AdminUsersByIDRow, error)
	AdminWritingCategoryCounts(ctx context.Context) ([]*AdminWritingCategoryCountsRow, error)
	AllLanguages(ctx context.Context) ([]*Language, error)
	ApproveImagePost(ctx context.Context, idimagepost int32) error
	ArchiveBlog(ctx context.Context, arg ArchiveBlogParams) error
	ArchiveComment(ctx context.Context, arg ArchiveCommentParams) error
	ArchiveImagepost(ctx context.Context, arg ArchiveImagepostParams) error
	ArchiveLink(ctx context.Context, arg ArchiveLinkParams) error
	// Queries for user deactivation and restoration
	ArchiveUser(ctx context.Context, idusers int32) error
	ArchiveWriting(ctx context.Context, arg ArchiveWritingParams) error
	AssignLinkerThisThreadId(ctx context.Context, arg AssignLinkerThisThreadIdParams) error
	AssignNewsThisThreadId(ctx context.Context, arg AssignNewsThisThreadIdParams) error
	AssignThreadIdToBlogEntry(ctx context.Context, arg AssignThreadIdToBlogEntryParams) error
	AssignWritingThisThreadId(ctx context.Context, arg AssignWritingThisThreadIdParams) error
	BlogsSearchFirst(ctx context.Context, arg BlogsSearchFirstParams) ([]int32, error)
	BlogsSearchNext(ctx context.Context, arg BlogsSearchNextParams) ([]int32, error)
	CheckGrant(ctx context.Context, arg CheckGrantParams) (int32, error)
	CheckRoleGrant(ctx context.Context, arg CheckRoleGrantParams) (int32, error)
	ClearNotificationPriority(ctx context.Context, userID int32) error
	CommentsSearchFirstInRestrictedTopic(ctx context.Context, arg CommentsSearchFirstInRestrictedTopicParams) ([]int32, error)
	CommentsSearchFirstNotInRestrictedTopic(ctx context.Context, word sql.NullString) ([]int32, error)
	CommentsSearchNextInRestrictedTopic(ctx context.Context, arg CommentsSearchNextInRestrictedTopicParams) ([]int32, error)
	CommentsSearchNextNotInRestrictedTopic(ctx context.Context, arg CommentsSearchNextNotInRestrictedTopicParams) ([]int32, error)
	// This query selects all words from the "searchwordlist" table and prints them.
	CompleteWordList(ctx context.Context) ([]sql.NullString, error)
	CountLanguages(ctx context.Context) (int64, error)
	CountLinksByCategory(ctx context.Context, linkerCategoryID int32) (int64, error)
	CountUnreadNotifications(ctx context.Context, usersIdusers int32) (int64, error)
	CountWordList(ctx context.Context) (int64, error)
	CountWordListByPrefix(ctx context.Context, prefix interface{}) (int64, error)
	CreateBlogEntry(ctx context.Context, arg CreateBlogEntryParams) (int64, error)
	// This query adds a new entry to the "bookmarks" table for a user.
	CreateBookmarks(ctx context.Context, arg CreateBookmarksParams) error
	CreateComment(ctx context.Context, arg CreateCommentParams) (int64, error)
	CreateFAQCategory(ctx context.Context, arg CreateFAQCategoryParams) error
	CreateFAQQuestion(ctx context.Context, arg CreateFAQQuestionParams) error
	CreateForumCategory(ctx context.Context, arg CreateForumCategoryParams) error
	CreateForumTopic(ctx context.Context, arg CreateForumTopicParams) (int64, error)
	CreateGrant(ctx context.Context, arg CreateGrantParams) (int64, error)
	CreateImageBoard(ctx context.Context, arg CreateImageBoardParams) error
	CreateImagePost(ctx context.Context, arg CreateImagePostParams) (int64, error)
	// This query inserts a new record into the "language" table.
	// Parameters:
	//   ? - Name of the new language (string)
	CreateLanguage(ctx context.Context, nameof sql.NullString) error
	CreateLinkerCategory(ctx context.Context, arg CreateLinkerCategoryParams) error
	CreateLinkerItem(ctx context.Context, arg CreateLinkerItemParams) error
	CreateLinkerQueuedItem(ctx context.Context, arg CreateLinkerQueuedItemParams) error
	CreateNewsPost(ctx context.Context, arg CreateNewsPostParams) (int64, error)
	CreatePasswordReset(ctx context.Context, arg CreatePasswordResetParams) error
	CreateSearchWord(ctx context.Context, word string) (int64, error)
	CreateUploadedImage(ctx context.Context, arg CreateUploadedImageParams) (int64, error)
	// This query inserts a new permission into the "permissions" table.
	// Parameters:
	//   ? - User ID to be associated with the permission (int)
	//   ? - Role of the permission (string)
	CreateUserRole(ctx context.Context, arg CreateUserRoleParams) error
	DeactivateNewsPost(ctx context.Context, idsitenews int32) error
	// This query deletes all data from the "blogs_search" table.
	DeleteBlogsSearch(ctx context.Context) error
	// This query deletes all data from the "comments_search" table.
	DeleteCommentsSearch(ctx context.Context) error
	DeleteFAQ(ctx context.Context, arg DeleteFAQParams) error
	DeleteFAQCategory(ctx context.Context, arg DeleteFAQCategoryParams) error
	DeleteForumCategory(ctx context.Context, idforumcategory int32) error
	// Removes a forum topic by ID.
	DeleteForumTopic(ctx context.Context, idforumtopic int32) error
	DeleteGrant(ctx context.Context, id int32) error
	DeleteImageBoard(ctx context.Context, idimageboard int32) error
	DeleteImagePostSearch(ctx context.Context) error
	// This query deletes a record from the "language" table based on the provided "cid".
	// Parameters:
	//   ? - Language ID to be deleted (int)
	DeleteLanguage(ctx context.Context, idlanguage int32) error
	DeleteLinkerCategory(ctx context.Context, idlinkercategory int32) error
	DeleteLinkerQueuedItem(ctx context.Context, idlinkerqueue int32) error
	// This query deletes all data from the "linker_search" table.
	DeleteLinkerSearch(ctx context.Context) error
	DeleteNotification(ctx context.Context, id int32) error
	DeletePasswordReset(ctx context.Context, id int32) error
	// Delete all password reset entries for the given user and return the result
	DeletePasswordResetsByUser(ctx context.Context, userID int32) (sql.Result, error)
	DeleteSessionByID(ctx context.Context, sessionID string) error
	// This query deletes all data from the "site_news_search" table.
	DeleteSiteNewsSearch(ctx context.Context) error
	DeleteSubscription(ctx context.Context, arg DeleteSubscriptionParams) error
	DeleteSubscriptionByID(ctx context.Context, arg DeleteSubscriptionByIDParams) error
	DeleteUserEmail(ctx context.Context, id int32) error
	DeleteUserEmailsByEmailExceptID(ctx context.Context, arg DeleteUserEmailsByEmailExceptIDParams) error
	DeleteUserLanguagesByUser(ctx context.Context, usersIdusers int32) error
	// This query deletes a permission from the "permissions" table based on the provided "permid".
	// Parameters:
	//   ? - Permission ID to be deleted (int)
	DeleteUserRole(ctx context.Context, iduserRoles int32) error
	// This query deletes all data from the "writing_search" table.
	DeleteWritingSearch(ctx context.Context) error
	FetchAllCategories(ctx context.Context) ([]*WritingCategory, error)
	FetchCategoriesForUser(ctx context.Context, arg FetchCategoriesForUserParams) ([]*WritingCategory, error)
	FetchLanguages(ctx context.Context) ([]*Language, error)
	FetchPendingEmails(ctx context.Context, limit int32) ([]*FetchPendingEmailsRow, error)
	FindForumTopicByTitle(ctx context.Context, title sql.NullString) (*Forumtopic, error)
	GetActiveAnnouncementWithNewsForViewer(ctx context.Context, arg GetActiveAnnouncementWithNewsForViewerParams) (*GetActiveAnnouncementWithNewsForViewerRow, error)
	GetAdminRequestByID(ctx context.Context, id int32) (*AdminRequestQueue, error)
	GetAdministratorUserRole(ctx context.Context, usersIdusers int32) (*UserRole, error)
	GetAllAnsweredFAQWithFAQCategoriesForUser(ctx context.Context, arg GetAllAnsweredFAQWithFAQCategoriesForUserParams) ([]*GetAllAnsweredFAQWithFAQCategoriesForUserRow, error)
	GetAllBlogEntriesByUserForAdmin(ctx context.Context, usersIdusers int32) ([]*GetAllBlogEntriesByUserForAdminRow, error)
	GetAllBoardsByParentBoardId(ctx context.Context, imageboardIdimageboard int32) ([]*Imageboard, error)
	GetAllBoardsByParentBoardIdForUser(ctx context.Context, arg GetAllBoardsByParentBoardIdForUserParams) ([]*Imageboard, error)
	GetAllCommentsForIndex(ctx context.Context) ([]*GetAllCommentsForIndexRow, error)
	GetAllFAQCategories(ctx context.Context) ([]*FaqCategory, error)
	GetAllFAQQuestions(ctx context.Context) ([]*Faq, error)
	GetAllForumCategories(ctx context.Context) ([]*Forumcategory, error)
	GetAllForumCategoriesWithSubcategoryCount(ctx context.Context) ([]*GetAllForumCategoriesWithSubcategoryCountRow, error)
	GetAllForumThreadsWithTopic(ctx context.Context) ([]*GetAllForumThreadsWithTopicRow, error)
	GetAllForumTopics(ctx context.Context) ([]*Forumtopic, error)
	GetAllForumTopicsByCategoryIdForUserWithLastPosterName(ctx context.Context, arg GetAllForumTopicsByCategoryIdForUserWithLastPosterNameParams) ([]*GetAllForumTopicsByCategoryIdForUserWithLastPosterNameRow, error)
	GetAllForumTopicsForUser(ctx context.Context, arg GetAllForumTopicsForUserParams) ([]*GetAllForumTopicsForUserRow, error)
	GetAllImageBoards(ctx context.Context) ([]*Imageboard, error)
	GetAllImageBoardsForUser(ctx context.Context, arg GetAllImageBoardsForUserParams) ([]*Imageboard, error)
	GetAllImagePostsByBoardIdWithAuthorUsernameAndThreadCommentCountForUser(ctx context.Context, arg GetAllImagePostsByBoardIdWithAuthorUsernameAndThreadCommentCountForUserParams) ([]*GetAllImagePostsByBoardIdWithAuthorUsernameAndThreadCommentCountForUserRow, error)
	GetAllImagePostsByIdWithAuthorUsernameAndThreadCommentCountForUser(ctx context.Context, arg GetAllImagePostsByIdWithAuthorUsernameAndThreadCommentCountForUserParams) (*GetAllImagePostsByIdWithAuthorUsernameAndThreadCommentCountForUserRow, error)
	GetAllImagePostsForIndex(ctx context.Context) ([]*GetAllImagePostsForIndexRow, error)
	GetAllLinkerCategories(ctx context.Context) ([]*LinkerCategory, error)
	GetAllLinkerCategoriesForUser(ctx context.Context, arg GetAllLinkerCategoriesForUserParams) ([]*LinkerCategory, error)
	GetAllLinkerCategoriesWithSortOrder(ctx context.Context) ([]*LinkerCategory, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescending(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginated(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRow(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRowParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingForUserPaginatedRowRow, error)
	GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginated(ctx context.Context, arg GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginatedParams) ([]*GetAllLinkerItemsByCategoryIdWitherPosterUsernameAndCategoryTitleDescendingPaginatedRow, error)
	GetAllLinkerQueuedItemsWithUserAndLinkerCategoryDetails(ctx context.Context) ([]*GetAllLinkerQueuedItemsWithUserAndLinkerCategoryDetailsRow, error)
	GetAllLinkersForIndex(ctx context.Context) ([]*GetAllLinkersForIndexRow, error)
	GetAllSiteNewsForIndex(ctx context.Context) ([]*GetAllSiteNewsForIndexRow, error)
	GetAllWritingCategories(ctx context.Context, writingCategoryID int32) ([]*WritingCategory, error)
	GetAllWritingsByUser(ctx context.Context, arg GetAllWritingsByUserParams) ([]*GetAllWritingsByUserRow, error)
	GetAllWritingsByUserAdmin(ctx context.Context, usersIdusers int32) ([]*GetAllWritingsByUserAdminRow, error)
	GetAllWritingsForIndex(ctx context.Context) ([]*GetAllWritingsForIndexRow, error)
	GetBlogEntriesByAuthorForUserDescendingLanguages(ctx context.Context, arg GetBlogEntriesByAuthorForUserDescendingLanguagesParams) ([]*GetBlogEntriesByAuthorForUserDescendingLanguagesRow, error)
	GetBlogEntriesByIdsDescendingForUser(ctx context.Context, arg GetBlogEntriesByIdsDescendingForUserParams) ([]*GetBlogEntriesByIdsDescendingForUserRow, error)
	GetBlogEntriesForViewerDescending(ctx context.Context, arg GetBlogEntriesForViewerDescendingParams) ([]*GetBlogEntriesForViewerDescendingRow, error)
	GetBlogEntryForUserById(ctx context.Context, arg GetBlogEntryForUserByIdParams) (*GetBlogEntryForUserByIdRow, error)
	// This query retrieves the "list" from the "bookmarks" table for a specific user based on their "users_idusers".
	GetBookmarksForUser(ctx context.Context, usersIdusers int32) (*GetBookmarksForUserRow, error)
	GetCommentById(ctx context.Context, idcomments int32) (*Comment, error)
	GetCommentByIdForUser(ctx context.Context, arg GetCommentByIdForUserParams) (*GetCommentByIdForUserRow, error)
	GetCommentsByIdsForUserWithThreadInfo(ctx context.Context, arg GetCommentsByIdsForUserWithThreadInfoParams) ([]*GetCommentsByIdsForUserWithThreadInfoRow, error)
	GetCommentsByThreadIdForUser(ctx context.Context, arg GetCommentsByThreadIdForUserParams) ([]*GetCommentsByThreadIdForUserRow, error)
	GetExternalLink(ctx context.Context, url string) (*ExternalLink, error)
	GetFAQAnsweredQuestions(ctx context.Context, arg GetFAQAnsweredQuestionsParams) ([]*Faq, error)
	GetFAQByID(ctx context.Context, idfaq int32) (*Faq, error)
	GetFAQCategoriesWithQuestionCount(ctx context.Context) ([]*GetFAQCategoriesWithQuestionCountRow, error)
	GetFAQDismissedQuestions(ctx context.Context) ([]*Faq, error)
	GetFAQRevisionsForAdmin(ctx context.Context, faqID int32) ([]*FaqRevision, error)
	GetFAQUnansweredQuestions(ctx context.Context) ([]*Faq, error)
	GetForumCategoryById(ctx context.Context, idforumcategory int32) (*Forumcategory, error)
	GetForumThreadIdByNewsPostId(ctx context.Context, idsitenews int32) (*GetForumThreadIdByNewsPostIdRow, error)
	GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostText(ctx context.Context, arg GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostTextParams) ([]*GetForumThreadsByForumTopicIdForUserWithFirstAndLastPosterAndFirstPostTextRow, error)
	GetForumTopicById(ctx context.Context, idforumtopic int32) (*Forumtopic, error)
	GetForumTopicByIdForUser(ctx context.Context, arg GetForumTopicByIdForUserParams) (*GetForumTopicByIdForUserRow, error)
	GetForumTopicIdByThreadId(ctx context.Context, idforumthread int32) (int32, error)
	GetForumTopicsByCategoryId(ctx context.Context, forumcategoryIdforumcategory int32) ([]*Forumtopic, error)
	GetImageBoardById(ctx context.Context, idimageboard int32) (*Imageboard, error)
	GetImagePostInfoByPath(ctx context.Context, arg GetImagePostInfoByPathParams) (*GetImagePostInfoByPathRow, error)
	GetImagePostsByUserDescending(ctx context.Context, arg GetImagePostsByUserDescendingParams) ([]*GetImagePostsByUserDescendingRow, error)
	GetImagePostsByUserDescendingAll(ctx context.Context, arg GetImagePostsByUserDescendingAllParams) ([]*GetImagePostsByUserDescendingAllRow, error)
	GetImagePostsByUserDescendingForUser(ctx context.Context, arg GetImagePostsByUserDescendingForUserParams) ([]*GetImagePostsByUserDescendingForUserRow, error)
	GetLanguageIDByName(ctx context.Context, nameof sql.NullString) (int32, error)
	GetLatestAnnouncementByNewsID(ctx context.Context, siteNewsID int32) (*SiteAnnouncement, error)
	GetLinkerCategoriesWithCount(ctx context.Context) ([]*GetLinkerCategoriesWithCountRow, error)
	GetLinkerCategoryById(ctx context.Context, idlinkercategory int32) (*LinkerCategory, error)
	GetLinkerCategoryLinkCounts(ctx context.Context) ([]*GetLinkerCategoryLinkCountsRow, error)
	GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescending(ctx context.Context, idlinker int32) (*GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingRow, error)
	GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUserParams) (*GetLinkerItemByIdWithPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescending(ctx context.Context, linkerids []int32) ([]*GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingRow, error)
	GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUser(ctx context.Context, arg GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUserParams) ([]*GetLinkerItemsByIdsWithPosterUsernameAndCategoryTitleDescendingForUserRow, error)
	GetLinkerItemsByUserDescending(ctx context.Context, arg GetLinkerItemsByUserDescendingParams) ([]*GetLinkerItemsByUserDescendingRow, error)
	GetLinkerItemsByUserDescendingForUser(ctx context.Context, arg GetLinkerItemsByUserDescendingForUserParams) ([]*GetLinkerItemsByUserDescendingForUserRow, error)
	GetMaxNotificationPriority(ctx context.Context, userID int32) (interface{}, error)
	GetNewsPostByIdWithWriterIdAndThreadCommentCount(ctx context.Context, arg GetNewsPostByIdWithWriterIdAndThreadCommentCountParams) (*GetNewsPostByIdWithWriterIdAndThreadCommentCountRow, error)
	GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCount(ctx context.Context, arg GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCountParams) ([]*GetNewsPostsByIdsForUserWithWriterIdAndThreadCommentCountRow, error)
	GetNewsPostsWithWriterUsernameAndThreadCommentCountDescending(ctx context.Context, arg GetNewsPostsWithWriterUsernameAndThreadCommentCountDescendingParams) ([]*GetNewsPostsWithWriterUsernameAndThreadCommentCountDescendingRow, error)
	GetNotification(ctx context.Context, id int32) (*Notification, error)
	GetNotificationEmailByUserID(ctx context.Context, userID int32) (*UserEmail, error)
	GetPasswordResetByCode(ctx context.Context, arg GetPasswordResetByCodeParams) (*PendingPassword, error)
	GetPasswordResetByUser(ctx context.Context, arg GetPasswordResetByUserParams) (*PendingPassword, error)
	GetPendingEmailErrorCount(ctx context.Context, id int32) (int32, error)
	// Lists the role names granted to a user.
	GetPermissionsByUserID(ctx context.Context, usersIdusers int32) ([]*GetPermissionsByUserIDRow, error)
	GetPermissionsWithUsers(ctx context.Context, arg GetPermissionsWithUsersParams) ([]*GetPermissionsWithUsersRow, error)
	GetPreferenceByUserID(ctx context.Context, usersIdusers int32) (*Preference, error)
	GetPublicWritings(ctx context.Context, arg GetPublicWritingsParams) ([]*Writing, error)
	GetPublicWritingsByUser(ctx context.Context, arg GetPublicWritingsByUserParams) ([]*GetPublicWritingsByUserRow, error)
	GetPublicWritingsByUserForViewer(ctx context.Context, arg GetPublicWritingsByUserForViewerParams) ([]*GetPublicWritingsByUserForViewerRow, error)
	GetPublicWritingsInCategory(ctx context.Context, arg GetPublicWritingsInCategoryParams) ([]*GetPublicWritingsInCategoryRow, error)
	GetPublicWritingsInCategoryForUser(ctx context.Context, arg GetPublicWritingsInCategoryForUserParams) ([]*GetPublicWritingsInCategoryForUserRow, error)
	GetSearchWordByWordLowercased(ctx context.Context, lcase string) (*Searchwordlist, error)
	GetThreadLastPosterAndPerms(ctx context.Context, arg GetThreadLastPosterAndPermsParams) (*GetThreadLastPosterAndPermsRow, error)
	GetUnreadNotifications(ctx context.Context, usersIdusers int32) ([]*Notification, error)
	GetUserById(ctx context.Context, idusers int32) (*GetUserByIdRow, error)
	GetUserByUsername(ctx context.Context, username sql.NullString) (*GetUserByUsernameRow, error)
	GetUserEmailByCode(ctx context.Context, lastVerificationCode sql.NullString) (*UserEmail, error)
	GetUserEmailByEmail(ctx context.Context, email string) (*UserEmail, error)
	GetUserEmailByID(ctx context.Context, id int32) (*UserEmail, error)
	GetUserEmailsByUserID(ctx context.Context, userID int32) ([]*UserEmail, error)
	GetUserLanguages(ctx context.Context, usersIdusers int32) ([]*UserLanguage, error)
	// This query returns the role for a user.
	// Result:
	//   role (string)
	GetUserRole(ctx context.Context, usersIdusers int32) (string, error)
	// This query selects permissions information for admin users.
	//   iduser_roles (int)
	//   role (string)
	//   username (string)
	//   email (string)
	GetUserRoles(ctx context.Context) ([]*GetUserRolesRow, error)
	GetWritingByIdForUserDescendingByPublishedDate(ctx context.Context, arg GetWritingByIdForUserDescendingByPublishedDateParams) (*GetWritingByIdForUserDescendingByPublishedDateRow, error)
	GetWritingCategoryById(ctx context.Context, idwritingcategory int32) (*WritingCategory, error)
	GetWritingsByCategoryId(ctx context.Context, writingCategoryID int32) ([]*GetWritingsByCategoryIdRow, error)
	GetWritingsByIdsForUserDescendingByPublishedDate(ctx context.Context, arg GetWritingsByIdsForUserDescendingByPublishedDateParams) ([]*GetWritingsByIdsForUserDescendingByPublishedDateRow, error)
	ImagePostSearchFirst(ctx context.Context, word sql.NullString) ([]int32, error)
	ImagePostSearchNext(ctx context.Context, arg ImagePostSearchNextParams) ([]int32, error)
	IncrementEmailError(ctx context.Context, id int32) error
	InsertAdminRequestComment(ctx context.Context, arg InsertAdminRequestCommentParams) error
	InsertAdminRequestQueue(ctx context.Context, arg InsertAdminRequestQueueParams) (sql.Result, error)
	InsertAdminUserComment(ctx context.Context, arg InsertAdminUserCommentParams) error
	InsertAuditLog(ctx context.Context, arg InsertAuditLogParams) error
	InsertEmailPreference(ctx context.Context, arg InsertEmailPreferenceParams) error
	InsertFAQRevisionForUser(ctx context.Context, arg InsertFAQRevisionForUserParams) error
	InsertLanguage(ctx context.Context, nameof sql.NullString) (sql.Result, error)
	InsertNotification(ctx context.Context, arg InsertNotificationParams) error
	InsertPassword(ctx context.Context, arg InsertPasswordParams) error
	InsertPendingEmail(ctx context.Context, arg InsertPendingEmailParams) error
	InsertPreference(ctx context.Context, arg InsertPreferenceParams) error
	InsertSession(ctx context.Context, arg InsertSessionParams) error
	InsertSubscription(ctx context.Context, arg InsertSubscriptionParams) error
	InsertUser(ctx context.Context, username sql.NullString) (sql.Result, error)
	InsertUserEmail(ctx context.Context, arg InsertUserEmailParams) error
	InsertUserLang(ctx context.Context, arg InsertUserLangParams) error
	InsertWriting(ctx context.Context, arg InsertWritingParams) (int64, error)
	InsertWritingCategory(ctx context.Context, arg InsertWritingCategoryParams) error
	LastNotificationByMessage(ctx context.Context, arg LastNotificationByMessageParams) (*Notification, error)
	LatestAdminUserComment(ctx context.Context, usersIdusers int32) (*AdminUserComment, error)
	LinkerSearchFirst(ctx context.Context, word sql.NullString) ([]int32, error)
	LinkerSearchNext(ctx context.Context, arg LinkerSearchNextParams) ([]int32, error)
	ListActiveBans(ctx context.Context) ([]*BannedIp, error)
	ListAdminRequestComments(ctx context.Context, requestID int32) ([]*AdminRequestComment, error)
	ListAdminUserComments(ctx context.Context, usersIdusers int32) ([]*AdminUserComment, error)
	ListArchivedAdminRequests(ctx context.Context) ([]*AdminRequestQueue, error)
	ListBannedIps(ctx context.Context) ([]*BannedIp, error)
	ListBloggersForViewer(ctx context.Context, arg ListBloggersForViewerParams) ([]*ListBloggersForViewerRow, error)
	ListEffectiveRoleIDsByUserID(ctx context.Context, usersIdusers int32) ([]int32, error)
	ListGrants(ctx context.Context) ([]*Grant, error)
	ListGrantsByUserID(ctx context.Context, userID sql.NullInt32) ([]*Grant, error)
	ListPendingAdminRequests(ctx context.Context) ([]*AdminRequestQueue, error)
	ListSessions(ctx context.Context) ([]*ListSessionsRow, error)
	ListSubscribersForPattern(ctx context.Context, arg ListSubscribersForPatternParams) ([]int32, error)
	ListSubscribersForPatterns(ctx context.Context, arg ListSubscribersForPatternsParams) ([]int32, error)
	ListSubscriptionsByUser(ctx context.Context, usersIdusers int32) ([]*ListSubscriptionsByUserRow, error)
	ListUploadedImagesByUserForViewer(ctx context.Context, arg ListUploadedImagesByUserForViewerParams) ([]*UploadedImage, error)
	ListUserNotifications(ctx context.Context, arg ListUserNotificationsParams) ([]*Notification, error)
	ListUserUnreadNotifications(ctx context.Context, arg ListUserUnreadNotificationsParams) ([]*Notification, error)
	ListUsersWithRoles(ctx context.Context) ([]*ListUsersWithRolesRow, error)
	ListVerifiedEmailsByUserID(ctx context.Context, userID int32) ([]*UserEmail, error)
	ListWritersForViewer(ctx context.Context, arg ListWritersForViewerParams) ([]*ListWritersForViewerRow, error)
	Login(ctx context.Context, username sql.NullString) (*LoginRow, error)
	MakeThread(ctx context.Context, forumtopicIdforumtopic int32) (int64, error)
	MarkBlogRestored(ctx context.Context, idblogs int32) error
	MarkCommentRestored(ctx context.Context, idcomments int32) error
	MarkEmailSent(ctx context.Context, id int32) error
	MarkImagepostRestored(ctx context.Context, idimagepost int32) error
	MarkLinkRestored(ctx context.Context, idlinker int32) error
	MarkNotificationRead(ctx context.Context, id int32) error
	MarkNotificationUnread(ctx context.Context, id int32) error
	MarkPasswordResetVerified(ctx context.Context, id int32) error
	MarkWritingRestored(ctx context.Context, idwriting int32) error
	PendingDeactivatedBlogs(ctx context.Context, usersIdusers int32) ([]*PendingDeactivatedBlogsRow, error)
	PendingDeactivatedComments(ctx context.Context, usersIdusers int32) ([]*PendingDeactivatedCommentsRow, error)
	PendingDeactivatedImageposts(ctx context.Context, usersIdusers int32) ([]*PendingDeactivatedImagepostsRow, error)
	PendingDeactivatedLinks(ctx context.Context, usersIdusers int32) ([]*PendingDeactivatedLinksRow, error)
	PendingDeactivatedWritings(ctx context.Context, usersIdusers int32) ([]*PendingDeactivatedWritingsRow, error)
	// Remove password reset entries that have expired or were already verified
	PurgePasswordResetsBefore(ctx context.Context, createdAt time.Time) (sql.Result, error)
	RebuildAllForumTopicMetaColumns(ctx context.Context) error
	RebuildForumTopicByIdMetaColumns(ctx context.Context, idforumtopic int32) error
	RecentNotifications(ctx context.Context, limit int32) ([]*Notification, error)
	RegisterExternalLinkClick(ctx context.Context, url string) error
	RenameFAQCategory(ctx context.Context, arg RenameFAQCategoryParams) error
	// This query updates the "nameof" field in the "language" table based on the provided "cid".
	// Parameters:
	//   ? - New name for the language (string)
	//   ? - Language ID to be updated (int)
	RenameLanguage(ctx context.Context, arg RenameLanguageParams) error
	RenameLinkerCategory(ctx context.Context, arg RenameLinkerCategoryParams) error
	RestoreBlog(ctx context.Context, arg RestoreBlogParams) error
	RestoreComment(ctx context.Context, arg RestoreCommentParams) error
	RestoreImagepost(ctx context.Context, arg RestoreImagepostParams) error
	RestoreLink(ctx context.Context, arg RestoreLinkParams) error
	RestoreUser(ctx context.Context, idusers int32) error
	RestoreWriting(ctx context.Context, arg RestoreWritingParams) error
	ScrubBlog(ctx context.Context, arg ScrubBlogParams) error
	ScrubComment(ctx context.Context, arg ScrubCommentParams) error
	ScrubImagepost(ctx context.Context, idimagepost int32) error
	ScrubLink(ctx context.Context, arg ScrubLinkParams) error
	ScrubUser(ctx context.Context, arg ScrubUserParams) error
	ScrubWriting(ctx context.Context, arg ScrubWritingParams) error
	SearchBloggersForViewer(ctx context.Context, arg SearchBloggersForViewerParams) ([]*SearchBloggersForViewerRow, error)
	SearchWritersForViewer(ctx context.Context, arg SearchWritersForViewerParams) ([]*SearchWritersForViewerRow, error)
	SelectInsertLInkerQueuedItemIntoLinkerByLinkerQueueId(ctx context.Context, idlinkerqueue int32) (int64, error)
	SetAnnouncementActive(ctx context.Context, arg SetAnnouncementActiveParams) error
	SetCommentLastIndex(ctx context.Context, idcomments int32) error
	SetImagePostLastIndex(ctx context.Context, idimagepost int32) error
	SetLinkerLastIndex(ctx context.Context, idlinker int32) error
	SetNotificationPriority(ctx context.Context, arg SetNotificationPriorityParams) error
	SetSiteNewsLastIndex(ctx context.Context, idsitenews int32) error
	SetVerificationCode(ctx context.Context, arg SetVerificationCodeParams) error
	SetWritingLastIndex(ctx context.Context, idwriting int32) error
	SiteNewsSearchFirst(ctx context.Context, word sql.NullString) ([]int32, error)
	SiteNewsSearchNext(ctx context.Context, arg SiteNewsSearchNextParams) ([]int32, error)
	SystemCountDeadLetters(ctx context.Context) (int64, error)
	SystemCountRecentLoginAttempts(ctx context.Context, arg SystemCountRecentLoginAttemptsParams) (int64, error)
	SystemDeleteDeadLetter(ctx context.Context, id int32) error
	SystemGetAllBlogsForIndex(ctx context.Context) ([]*SystemGetAllBlogsForIndexRow, error)
	SystemGetTemplateOverride(ctx context.Context, name string) (string, error)
	// System query only used internally
	SystemInsertDeadLetter(ctx context.Context, message string) error
	SystemInsertLoginAttempt(ctx context.Context, arg SystemInsertLoginAttemptParams) error
	SystemLatestDeadLetter(ctx context.Context) (interface{}, error)
	SystemListDeadLetters(ctx context.Context, limit int32) ([]*DeadLetter, error)
	SystemListUserInfo(ctx context.Context) ([]*SystemListUserInfoRow, error)
	SystemPurgeDeadLettersBefore(ctx context.Context, createdAt time.Time) error
	SystemSetBlogLastIndex(ctx context.Context, idblogs int32) error
	UpdateAdminRequestStatus(ctx context.Context, arg UpdateAdminRequestStatusParams) error
	UpdateAutoSubscribeRepliesByUserID(ctx context.Context, arg UpdateAutoSubscribeRepliesByUserIDParams) error
	UpdateBlogEntry(ctx context.Context, arg UpdateBlogEntryParams) error
	// This query updates the "list" column in the "bookmarks" table for a specific user based on their "users_idusers".
	UpdateBookmarks(ctx context.Context, arg UpdateBookmarksParams) error
	UpdateComment(ctx context.Context, arg UpdateCommentParams) error
	UpdateEmailForumUpdatesByUserID(ctx context.Context, arg UpdateEmailForumUpdatesByUserIDParams) error
	UpdateFAQQuestionAnswer(ctx context.Context, arg UpdateFAQQuestionAnswerParams) error
	UpdateForumCategory(ctx context.Context, arg UpdateForumCategoryParams) error
	UpdateForumTopic(ctx context.Context, arg UpdateForumTopicParams) error
	UpdateImageBoard(ctx context.Context, arg UpdateImageBoardParams) error
	UpdateImagePostByIdForumThreadId(ctx context.Context, arg UpdateImagePostByIdForumThreadIdParams) error
	UpdateLinkerCategorySortOrder(ctx context.Context, arg UpdateLinkerCategorySortOrderParams) error
	UpdateLinkerItem(ctx context.Context, arg UpdateLinkerItemParams) error
	UpdateLinkerQueuedItem(ctx context.Context, arg UpdateLinkerQueuedItemParams) error
	UpdateNewsPost(ctx context.Context, arg UpdateNewsPostParams) error
	UpdatePermission(ctx context.Context, arg UpdatePermissionParams) error
	UpdatePreference(ctx context.Context, arg UpdatePreferenceParams) error
	UpdatePublicProfileEnabledAtByUserID(ctx context.Context, arg UpdatePublicProfileEnabledAtByUserIDParams) error
	UpdateUserEmail(ctx context.Context, arg UpdateUserEmailParams) error
	UpdateUserEmailVerification(ctx context.Context, arg UpdateUserEmailVerificationParams) error
	UpdateWriting(ctx context.Context, arg UpdateWritingParams) error
	UpdateWritingCategory(ctx context.Context, arg UpdateWritingCategoryParams) error
	UserByEmail(ctx context.Context, email string) (*UserByEmailRow, error)
	UserHasLoginRole(ctx context.Context, usersIdusers int32) (int32, error)
	UserHasPublicProfileRole(ctx context.Context, usersIdusers int32) (int32, error)
	UserHasRole(ctx context.Context, arg UserHasRoleParams) (int32, error)
	// Show each search word with total usage counts across all search tables.
	WordListWithCounts(ctx context.Context, arg WordListWithCountsParams) ([]*WordListWithCountsRow, error)
	WordListWithCountsByPrefix(ctx context.Context, arg WordListWithCountsByPrefixParams) ([]*WordListWithCountsByPrefixRow, error)
	WritingSearchDelete(ctx context.Context, writingID int32) error
	WritingSearchFirst(ctx context.Context, word sql.NullString) ([]int32, error)
	WritingSearchNext(ctx context.Context, arg WritingSearchNextParams) ([]int32, error)
	listEmailsByUserID(ctx context.Context, userID int32) ([]*UserEmail, error)
}

var _ Querier = (*Queries)(nil)
