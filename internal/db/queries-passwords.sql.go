// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries-passwords.sql

package db

import (
	"context"
	"database/sql"
)

const getLatestPasswordByUserID = `-- name: GetLatestPasswordByUserID :one
SELECT id, users_idusers, passwd, passwd_algorithm, created_at
FROM passwords
WHERE users_idusers = ?
ORDER BY created_at DESC
LIMIT 1
`

func (q *Queries) GetLatestPasswordByUserID(ctx context.Context, usersIdusers int32) (*Password, error) {
	row := q.db.QueryRowContext(ctx, getLatestPasswordByUserID, usersIdusers)
	var i Password
	err := row.Scan(
		&i.ID,
		&i.UsersIdusers,
		&i.Passwd,
		&i.PasswdAlgorithm,
		&i.CreatedAt,
	)
	return &i, err
}

const insertPassword = `-- name: InsertPassword :exec
INSERT INTO passwords (users_idusers, passwd, passwd_algorithm)
VALUES (?, ?, ?)
`

type InsertPasswordParams struct {
	UsersIdusers    int32
	Passwd          string
	PasswdAlgorithm sql.NullString
}

func (q *Queries) InsertPassword(ctx context.Context, arg InsertPasswordParams) error {
	_, err := q.db.ExecContext(ctx, insertPassword, arg.UsersIdusers, arg.Passwd, arg.PasswdAlgorithm)
	return err
}
