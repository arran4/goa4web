// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries-uploadimages.sql

package db

import (
	"context"
	"database/sql"
)

const createUploadedImage = `-- name: CreateUploadedImage :execlastid
INSERT INTO uploaded_images (
    users_idusers, path, width, height, file_size, uploaded
) VALUES (?, ?, ?, ?, ?, NOW())
`

type CreateUploadedImageParams struct {
	UsersIdusers int32
	Path         sql.NullString
	Width        sql.NullInt32
	Height       sql.NullInt32
	FileSize     int32
}

func (q *Queries) CreateUploadedImage(ctx context.Context, arg CreateUploadedImageParams) (int64, error) {
	result, err := q.db.ExecContext(ctx, createUploadedImage,
		arg.UsersIdusers,
		arg.Path,
		arg.Width,
		arg.Height,
		arg.FileSize,
	)
	if err != nil {
		return 0, err
	}
	return result.LastInsertId()
}

const getUploadedImage = `-- name: GetUploadedImage :one
SELECT iduploadedimage, users_idusers, path, width, height, file_size, uploaded FROM uploaded_images WHERE iduploadedimage = ?
`

func (q *Queries) GetUploadedImage(ctx context.Context, iduploadedimage int32) (*UploadedImage, error) {
	row := q.db.QueryRowContext(ctx, getUploadedImage, iduploadedimage)
	var i UploadedImage
	err := row.Scan(
		&i.Iduploadedimage,
		&i.UsersIdusers,
		&i.Path,
		&i.Width,
		&i.Height,
		&i.FileSize,
		&i.Uploaded,
	)
	return &i, err
}
