// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: queries.sql

package main

import (
	"context"
)

const countCategories = `-- name: countCategories :one
SELECT COUNT(*) AS count
FROM language
`

// This query returns the count of all records in the "language" table.
// Result:
//
//	count(*) - The count of rows in the "language" table (int)
func (q *Queries) countCategories(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countCategories)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createLanguage = `-- name: createLanguage :exec
INSERT INTO language (nameof)
VALUES ($1)
`

// This query inserts a new record into the "language" table.
// Parameters:
//
//	$1 - Name of the new language (string)
func (q *Queries) createLanguage(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createLanguage)
	return err
}

const deleteLanguage = `-- name: deleteLanguage :exec
DELETE FROM language
WHERE idlanguage = $1
`

// This query deletes a record from the "language" table based on the provided "cid".
// Parameters:
//
//	$1 - Language ID to be deleted (int)
func (q *Queries) deleteLanguage(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteLanguage)
	return err
}

const renameLanguage = `-- name: renameLanguage :exec
UPDATE language
SET nameof = $1
WHERE idlanguage = $2
`

// This query updates the "nameof" field in the "language" table based on the provided "cid".
// Parameters:
//
//	$1 - New name for the language (string)
//	$2 - Language ID to be updated (int)
func (q *Queries) renameLanguage(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, renameLanguage)
	return err
}
